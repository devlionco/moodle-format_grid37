
define(['jquery','format_grid/modal'],function($,modal){'use strict';const GRIDSECTIONS=document.querySelector(`.gridicons`);const MAXCOUNTSECTION=4;const pinnedWapper=GRIDSECTIONS.querySelector(`.pinnedsections`);const actionBlock=document.querySelector(`#gridshadebox`);const sections=Array.from(GRIDSECTIONS.querySelectorAll(`.gridicons li`));let pinnedSections=Array.from(GRIDSECTIONS.querySelectorAll(`.gridicons .pinned`));const refreshPinnedSection=()=>{pinnedSections=Array.from(GRIDSECTIONS.querySelectorAll(`.gridicons .pinned`));pinnedWapper.innerHTML=``;pinnedSections.forEach((item)=>{pinnedWapper.appendChild(item);});}
const getSectionId=(target)=>{while(!target.classList.contains(`section`)){target=target.parentNode;}
return target.id.replace(/\D+/,'');}
const addPinnedSection=(target)=>{let sectionnumber=getSectionId(target);let targetSection=document.querySelector(`a[id=gridsection-${sectionnumber}]`);targetSection.parentNode.classList.add('pinned');refreshPinnedSection();}
const removePinnedSection=(target)=>{let sectionnumber=getSectionId(target);let targetSection=document.querySelector(`a[id=gridsection-${sectionnumber}]`);targetSection.parentNode.classList.remove('pinned');refreshPinnedSection();}
const togglePinnedSectionIndicator=(target)=>{let pinBefore;let pinAfter;let title;let action;let text;let classBefore;let classAfter;if(target.dataset.action===`topinsection`){pinBefore=0;pinAfter=1;title='This section is pinned';action='tounpinsection';text='Unpun section';classBefore='fa-lock';classAfter='fa-unlock';}else{pinBefore=1;pinAfter=0;title='Pin this section to show it in the front';action='topinsection';text='Pin Section';classBefore='fa-unlock';classAfter='fa-lock';}
target.href=target.href.replace(`pinned=${pinBefore}`,`pinned=${pinAfter}`);target.title=title;setTimeout(function(){target.dataset.action=action;},2000)
target.firstChild.classList.replace(classBefore,classAfter);target.lastChild.innerHTML=text;}
const checkMaxCountOfPinnedSection=()=>{return(pinnedWapper.childElementCount<MAXCOUNTSECTION)?1:0;}
return{init:function(){refreshPinnedSection();actionBlock.addEventListener('click',function(e){let target=e.target;while(!target.classList.contains(`gridcursor`)){if(target.dataset.action===`topinsection`){if(!checkMaxCountOfPinnedSection()){return;}
togglePinnedSectionIndicator(target);addPinnedSection(target);return}
if(target.dataset.action===`tounpinsection`){togglePinnedSectionIndicator(target);removePinnedSection(target);return}
target=target.parentNode;}});}};});